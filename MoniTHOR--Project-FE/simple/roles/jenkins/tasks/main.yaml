---
  - name: Set Jenkins IP as a fact
    set_fact:
      jenkins_ip: "{{ ansible_host }}"

  - name: Install Docker
    apt:
      name: docker.io
      state: present
  
  - name: Create /var/jenkins_home
    file:
      name: /var/jenkins_home
      state: directory

  - name: Add NFS export to fstab file
    ansible.builtin.lineinfile:
      path: /etc/fstab
      line: "{{ nfs_ip }}:/{{ export_directory }} /var/jenkins_home nfs defaults 0 0"
      create: yes

  - name: Apply mounts
    shell: systemctl daemon-reload && mount -a

  - name: Set directory Permissions
    shell: chown -R 1000:1000 /var/jenkins_home

  - name: Run Jenkins Container
    docker_container:
      name: jenkins
      image: jenkins/jenkins
      state: started
      restart_policy: always
      ports:
        - "8080:8080"
      volumes:
        - /var/jenkins_home:/var/jenkins_home

  - name: Ensure init.groovy.d directory exists
    shell: "docker exec jenkins mkdir -p /var/jenkins_home/init.groovy.d"

  - name: Retrieve Jenkins initial admin password
    shell: "docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword"
    register: admin_password

  - name: Unlock Jenkins with admin password
    uri:
      url: "http://{{ ansible_host }}:8080/login"
      method: POST
      headers:
        Content-Type: "application/x-www-form-urlencoded"
      body: "j_username=admin&j_password={{ admin_password.stdout }}"
      body_format: form-urlencoded
    ignore_errors: yes  # Ignore in case Jenkins is already unlocked

  - name: Copy admin user creation script
    copy:
      src: "{{ role_path }}/files/create_admin_user.groovy"
      dest: /var/jenkins_home/init.groovy.d/create_admin_user.groovy
      remote_src: no

  - name: Copy plugin installation script
    copy:
      src: "{{ role_path }}/files/install_plugins.groovy"
      dest: /var/jenkins_home/init.groovy.d/install_plugins.groovy
      remote_src: no

  - name: Copy DNS configuration script
    copy:
      src: "{{ role_path }}/files/configure_dns.groovy"
      dest: /var/jenkins_home/init.groovy.d/configure_dns.groovy
      remote_src: no

  - name: Restart Jenkins container
    docker_container:
      name: jenkins
      state: started
      restart: yes